-- 3.1 Select all warehouses.

-- Select * from Warehouses;

-- 3.2 Select all boxes with a value larger than $150.


-- Select * from Boxes where Value > 150;


-- 3.3 Select all distinct contents in all the boxes.


-- select distinct(Contents) from Boxes;


-- 3.4 Select the average value of all the boxes.


-- select avg(Value) from Boxes;


-- 3.5 Select the warehouse code and the average value of the boxes in each warehouse.


-- select Wcode,avg(Value) from Boxes 
-- group by Wcode


-- 3.6 Same as previous exercise, but select only those warehouses where the average value of the boxes is greater than 150.

-- select Wcode,avg(Value) from Boxes 
-- group by Wcode
-- having avg(Value)>150

    
-- 3.7 Select the code of each box, along with the name of the city the box is located in.


-- Select Boxes.Bcode, Warehouses.Location
-- from Warehouses inner join Boxes 
-- on Warehouses.Wcode = Boxes.Wcode


-- 3.8 Select the warehouse codes, along with the number of boxes in each warehouse. 
    -- Optionally, take into account that some warehouses are empty (i.e., the box count should show up as zero, instead of omitting the warehouse from the result).
    
    
-- Select Warehouses.Wcode, count(BCode)
-- from Warehouses left join Boxes 
-- on Warehouses.Wcode = Boxes.Wcode
-- group by Warehouses.Wcode;
    
    
-- 3.9 Select the codes of all warehouses that are saturated (a warehouse is saturated if the number of boxes in it is larger than the warehouse's capacity).

-- using joins
-- select * from Warehouses inner join

--           (
--               Select Warehouses.Wcode as wc, count(Warehouses.WCode) as cnt
--               from Warehouses inner join Boxes 
--               on Warehouses.Wcode = Boxes.Wcode
--               group by Warehouses.Wcode
              
--           ) t
          
-- on t.wc = Warehouses.WCode
-- where t.cnt > Warehouses.Capacity;

-- using correlated query

-- SELECT WCode
--   FROM Warehouses
--   WHERE Capacity <
--   (
--     SELECT COUNT(*)
--     FROM Boxes
--     WHERE Wcode = Warehouses.WCode
--   );
   




-- 3.10 Select the codes of all the boxes located in Chicago.

-- Select Boxes.Bcode
-- from Warehouses inner join Boxes 
-- on Warehouses.Wcode = Boxes.Wcode
-- where Warehouses.Location = "Chicago";


-- 3.11 Create a new warehouse in New York with a capacity for 3 boxes.

-- INSERT INTO Warehouses(Location,Capacity) VALUES('New York',3);
-- select * from Warehouses;


-- 3.12 Create a new box, with code "H5RT", containing "Papers" with a value of $200, and located in warehouse 2.

-- INSERT INTO Boxes(BCode,Contents,Value,WCode) VALUES ("H5RT",
-- "Papers",
-- 200,2);

-- select * from Boxes;


-- 3.13 Reduce the value of all boxes by 15%.


-- Update Boxes 
-- set Value = Value*0.85;



-- 3.14 Remove all boxes with a value lower than $100.


-- delete from Boxes 
-- where Value <100;

-- 3.15 Remove all boxes from saturated warehouses.

-- Select * from ( code after where WCode in the first line is important
-- Try removing it and learn more about the error herre
-- "https:://stackoverflow.com/questions/5816840/delete-i-cant-specify-target-table"

-- delete from Boxes where Wcode = (Select * from (
--                                           select Wcode from Warehouses 
--                                                             where Capacity < (
--                                                             select count(*) from Boxes
--                                                             where Boxes.Wcode = Warehouses.WCode
--                                                             ) 
--                                               )t
--                                 );
                                
                            
                      
-- Select * from Boxes;



-- 3.16 Add Index for column "WCode" in table "boxes"
    -- !!!NOTE!!!: index should NOT be used on small tables in practice
    
-- CREATE INDEX iWCode
-- ON Boxes (WCode);    
    
-- 3.17 Print all the existing indexes
    -- !!!NOTE!!!: index should NOT be used on small tables in practice
    
    
-- SHOW INDEX FROM Boxes;
    
-- 3.18 Remove (drop) the index you added just
    -- !!!NOTE!!!: index should NOT be used on small tables in practice
    
-- ALTER TABLE Boxes
-- DROP INDEX iWCode;