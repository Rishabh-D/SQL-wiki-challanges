
-- 1.1 Select the names of all the products in the store.

-- select distinct(Products.Name) from Products;

-- 1.2 Select the names and the prices of all the products in the store.

-- select Name, Price from Products;

-- 1.3 Select the name of the products with a price less than or equal to $200.

-- select name from Products where Price<=200;

-- 1.4 Select all the products with a price between $60 and $120.

-- select name from Products where Price Between 60 and 120

-- 1.5 Select the name and price in cents (i.e., the price must be multiplied by 100).

-- select name, price*100 from Products;

-- 1.6 Compute the average price of all the products.

-- select avg(price) from Products;

-- 1.7 Compute the average price of all products with manufacturer code equal to 2.

-- select avg(price) from Products where code = 2;

-- 1.8 Compute the number of products with a price larger than or equal to $180.

-- select count(*) from Products
-- where price > 180

-- 1.9 Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name (in ascending order).

-- select name, price 
-- from Products
-- where price > 180
-- order by 2 desc, 1 asc;

-- 1.10 Select all the data from the products, including all the data for each product's manufacturer.

-- SELECT *
--   FROM Products LEFT JOIN Manufacturers
--   ON Products.Manufacturer = Manufacturers.Code;


-- 1.11 Select the product name, price, and manufacturer name of all the products.

-- SELECT Products.Name, Price, Manufacturers.Name
--   FROM Products INNER JOIN Manufacturers
--   ON Products.Manufacturer = Manufacturers.Code;
   

-- 1.12 Select the average price of each manufacturer's products, showing only the manufacturer's code.

-- select Manufacturer,avg(Price)
-- from Products
-- group by Manufacturer;

-- 1.13 Select the average price of each manufacturer's products, showing the manufacturer's name.

-- Select Manufacturers.Name, avg(Price)
-- from Products inner join Manufacturers
-- on Products.Manufacturer = Manufacturers.code
-- group by Products.Manufacturer;

-- 1.14 Select the names of manufacturer whose products have an average price larger than or equal to $150.

-- Select Manufacturers.Name, avg(Price)
-- from Products inner join Manufacturers
-- on Products.Manufacturer = Manufacturers.code
-- group by Products.Manufacturer
-- having avg(Price)>=150;

-- 1.15 Select the name and price of the cheapest product.

-- select Name from Products
-- where Price in (select min(Price) from Products);

-- 1.16 Select the name of each manufacturer along with the name and price of its most expensive product.

-- select * from
-- (
-- Select Manufacturers.Name mNAME,Products.Name, Products.price,
-- dense_rank() over(partition by Products.Manufacturer ORDER BY Products.Price DESC) as `rp`
-- from Products
-- inner join Manufacturers
-- on Products.Manufacturer = Manufacturers.code
-- ) as dt
-- where rp=1

-- use cte or inner query as rp will be unavailable for "where" clause
-- reason : first where runs and then select

-- WITH CTE AS (
-- Select Manufacturers.Name mNAME,Products.Name, Products.price,
-- dense_rank() over(partition by Products.Manufacturer ORDER BY Products.Price DESC) as `rp`
-- from Products
-- inner join Manufacturers
-- on Products.Manufacturer = Manufacturers.code
-- )

-- SELECT * from CTE
-- where rp=1;






-- 1.17 Add a new product: Loudspeakers, $70, manufacturer 2.


-- Insert into Products (Name,Price,Manufacturer) values ("Loudspeakers",70,2);
-- select * from Products where Name="Loudspeakers";

-- 1.18 Update the name of product 8 to "Laser Printer".

-- Update Products 
-- set Name = "Laser Printer"
-- where Code=8;

-- Select * from Products 
-- where code =8;

-- 1.19 Apply a 10% discount to all products.


-- Update Products 
-- set price = price*0.90;

-- select * from Products;

-- 1.20 Apply a 10% discount to all products with a price larger than or equal to $120.


-- Update Products 
-- set price = price*0.9 
-- where price>= 120;

-- select * from Products;
